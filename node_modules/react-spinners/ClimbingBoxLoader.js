(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', '@emotion/core', 'recompose/onlyUpdateForKeys', './helpers'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'), require('./helpers'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.core, global.onlyUpdateForKeys, global.helpers);
    global.ClimbingBoxLoader = mod.exports;
  }
})(this, function (exports, _react, _core, _onlyUpdateForKeys, _helpers) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var _templateObject = _taggedTemplateLiteral(['\n  0% {transform:translate(0, -1em) rotate(-45deg)} \n  5% {transform:translate(0, -1em) rotate(-50deg)}\n  20% {transform:translate(1em, -2em) rotate(47deg)}\n  25% {transform:translate(1em, -2em) rotate(45deg)}\n  30% {transform:translate(1em, -2em) rotate(40deg)}\n  45% {transform:translate(2em, -3em) rotate(137deg)}\n  50% {transform:translate(2em, -3em) rotate(135deg)}\n  55% {transform:translate(2em, -3em) rotate(130deg)}\n  70% {transform:translate(3em, -4em) rotate(217deg)}\n  75% {transform:translate(3em, -4em) rotate(220deg)}\n  100% {transform:translate(0, -1em) rotate(-225deg)}\n'], ['\n  0% {transform:translate(0, -1em) rotate(-45deg)} \n  5% {transform:translate(0, -1em) rotate(-50deg)}\n  20% {transform:translate(1em, -2em) rotate(47deg)}\n  25% {transform:translate(1em, -2em) rotate(45deg)}\n  30% {transform:translate(1em, -2em) rotate(40deg)}\n  45% {transform:translate(2em, -3em) rotate(137deg)}\n  50% {transform:translate(2em, -3em) rotate(135deg)}\n  55% {transform:translate(2em, -3em) rotate(130deg)}\n  70% {transform:translate(3em, -4em) rotate(217deg)}\n  75% {transform:translate(3em, -4em) rotate(220deg)}\n  100% {transform:translate(0, -1em) rotate(-225deg)}\n']);

  function _taggedTemplateLiteral(strings, raw) {
    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  var climbingBox = (0, _core.keyframes)(_templateObject);

  var _ref = process.env.NODE_ENV === 'production' ? {
    name: '1kttcze-container',
    styles: '{position:relative;width:7.1em;height:7.1em;}label:container;'
  } : {
    name: '1kttcze-container',
    styles: '{position:relative;width:7.1em;height:7.1em;}label:container;',
    map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0V5QiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBzaXplUHJvcHMsIHNpemVEZWZhdWx0cywgc2l6ZUtleXMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0gc2l6ZVByb3BzO1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0gc2l6ZURlZmF1bHRzKDE1KTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoc2l6ZUtleXMpKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'
  };

  var Loader = function (_React$Component) {
    _inherits(Loader, _React$Component);

    function Loader() {
      var _ref2;

      var _temp, _this, _ret;

      _classCallCheck(this, Loader);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref2, [this].concat(args))), _this), _this.style = function () {
        var color = _this.props.color;


        return (0, _core.css)('{position:absolute;left:0;bottom:-0.1em;height:1em;width:1em;background-color:transparent;border-radius:15%;border:0.25em solid ', color, ';transform:translate(0,-1em) rotate(-45deg);animation-fill-mode:both;animation:', climbingBox, ' 2.5s infinite cubic-bezier(.79,0,.47,.97);}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0JnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBzaXplUHJvcHMsIHNpemVEZWZhdWx0cywgc2l6ZUtleXMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0gc2l6ZVByb3BzO1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0gc2l6ZURlZmF1bHRzKDE1KTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoc2l6ZUtleXMpKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));
      }, _this.wrapper = function () {
        var _this$props = _this.props,
            size = _this$props.size,
            sizeUnit = _this$props.sizeUnit;


        return (0, _core.css)('{position:absolute;top:50%;left:50%;margin-top:-2.7em;margin-left:-2.7em;width:5.4em;height:5.4em;font-size:', '' + size + sizeUnit, ';}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBzaXplUHJvcHMsIHNpemVEZWZhdWx0cywgc2l6ZUtleXMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0gc2l6ZVByb3BzO1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0gc2l6ZURlZmF1bHRzKDE1KTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoc2l6ZUtleXMpKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));
      }, _this.hill = function () {
        var color = _this.props.color;


        return (0, _core.css)('{position:absolute;width:7.1em;height:7.1em;top:1.7em;left:1.7em;border-left:0.25em solid ', color, ';transform:rotate(45deg);}label:hill;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBzaXplUHJvcHMsIHNpemVEZWZhdWx0cywgc2l6ZUtleXMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0gc2l6ZVByb3BzO1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0gc2l6ZURlZmF1bHRzKDE1KTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoc2l6ZUtleXMpKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));
      }, _this.container = function () {
        var container = _ref;

        return _this.props.css ? (0, _core.css)(container, ';', _this.props.css, 'label:container;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEUrQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBzaXplUHJvcHMsIHNpemVEZWZhdWx0cywgc2l6ZUtleXMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0gc2l6ZVByb3BzO1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0gc2l6ZURlZmF1bHRzKDE1KTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoc2l6ZUtleXMpKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */')) : container;
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Loader, [{
      key: 'render',
      value: function render() {
        var loading = this.props.loading;


        return loading ? (0, _core.jsx)(
          'div',
          { css: this.container() },
          (0, _core.jsx)(
            'div',
            { css: this.wrapper() },
            (0, _core.jsx)('div', { css: this.style() }),
            (0, _core.jsx)('div', { css: this.hill() })
          )
        ) : null;
      }
    }]);

    return Loader;
  }(_react2.default.Component);

  Loader.propTypes = _helpers.sizeProps;

  Loader.defaultProps = (0, _helpers.sizeDefaults)(15);

  var Component = (0, _onlyUpdateForKeys2.default)(_helpers.sizeKeys)(Loader);
  Component.defaultProps = Loader.defaultProps;
  exports.default = Component;
});