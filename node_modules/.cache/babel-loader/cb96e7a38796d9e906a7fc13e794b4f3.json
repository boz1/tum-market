{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JFrancisco\\\\Documents\\\\tum-market\\\\src\\\\components\\\\Navbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../config/firebaseConfig';\nimport logo from \"../assests/logo.svg\";\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport history from '../history';\nimport Filter from './Filter';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: [],\n      notificationIds: [],\n      isRead: true,\n      notReadNotificationCount: 0\n    };\n    this.logout = this.logout.bind(this);\n    this.readNotifications = this.readNotifications.bind(this);\n    this.getNotification = this.getNotification.bind(this);\n    this.deleteNotification = this.deleteNotification.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.notifRef !== undefined) {\n      this.notifRef.off('value');\n      this.notifRef = null;\n    }\n\n    if (this.removeNotifRef !== undefined) {\n      this.removeNotifRef.off('value');\n      this.removeNotifRef = null;\n    }\n\n    if (this.notifReadRef !== undefined) {\n      this.notifReadRef.off('value');\n      this.notifReadRef = null;\n    }\n  }\n\n  componentWillReceiveProps() {\n    if (this.props.user !== undefined && this.props.user.info !== undefined) {\n      this.notifRef = firebase.database().ref('notifications').child(this.props.user.info.id);\n      this.notifRef.on('child_added', snap => {\n        let id = snap.val().id;\n\n        if (!this.state.notificationIds.includes(id)) {\n          let isRead = snap.val().isRead;\n          let notReadNotifCount = this.state.notReadNotificationCount;\n\n          if (!isRead) {\n            notReadNotifCount++;\n          }\n\n          let notification = snap.val();\n          let idObj = this.state.notificationIds;\n          let notifObj = this.state.notifications;\n          idObj.push(id);\n          notifObj.push(notification);\n          this.setState({\n            notifications: notifObj,\n            notificationIds: idObj,\n            isRead: isRead,\n            notReadNotificationCount: notReadNotifCount\n          });\n        }\n      });\n    }\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    history.push('/');\n  }\n\n  readNotifications(isShown) {\n    if (this.props.user !== undefined && this.props.user.info !== undefined && !this.state.isRead) {\n      this.notifReadRef = firebase.database().ref('notifications').child(this.props.user.info.id).orderByChild('isRead').equalTo(false);\n      this.notifReadRef.on('value', function (snap) {\n        snap.forEach(function (notification) {\n          notification.ref.update({\n            isRead: true\n          });\n        });\n      });\n      this.notifReadRef.off('value');\n      this.notifReadRef = null;\n      let notifications = this.state.notifications;\n      let isRead = this.state.isRead;\n\n      if (!isShown) {\n        notifications.forEach(function (notification) {\n          if (!notification.isRead) {\n            notification.isRead = true;\n          }\n        });\n        isRead = true;\n      }\n\n      this.setState({\n        isRead: isRead,\n        notReadNotificationCount: 0,\n        notifications: notifications\n      });\n    }\n  }\n\n  getNotification(notification) {\n    let notificationContainer;\n\n    if (notification.isRead) {\n      notificationContainer = React.createElement(Link, {\n        to: {\n          pathname: '/tradeRequests'\n        },\n        className: \"dropdown-item\",\n        style: {\n          padding: \"0.75rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, notification.message);\n    } else {\n      notificationContainer = React.createElement(Link, {\n        to: {\n          pathname: '/tradeRequests'\n        },\n        className: \"dropdown-item\",\n        style: {\n          padding: \"0.75rem\",\n          background: \"#C7DCF2\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, notification.message);\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      style: {\n        padding: \"0.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, notificationContainer, React.createElement(\"div\", {\n      className: \"m-auto pl-2 pr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"float-right offer-reject\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.deleteNotification,\n      \"data-notification\": notification.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      style: {\n        margin: \"0rem 0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  }\n\n  deleteNotification(e) {\n    if (this.props.user !== undefined && this.props.user.info !== undefined) {\n      let id = e.currentTarget.dataset.notification;\n      let ids = [];\n      let notifications = [];\n      this.state.notificationIds.forEach(function (notifId) {\n        if (notifId !== id) {\n          ids.push(notifId);\n        }\n      });\n      this.state.notifications.forEach(function (notif) {\n        if (notif.id !== id) {\n          notifications.push(notif);\n        }\n      });\n      let notifCount = this.state.notReadNotificationCount - 1;\n\n      if (notifCount < 0) {\n        notifCount = 0;\n      }\n\n      this.setState({\n        notificationIds: ids,\n        notifications: notifications,\n        notReadNotificationCount: notifCount\n      });\n      this.removeNotifRef = firebase.database().ref('notifications').child(this.props.user.info.id).child(id).remove();\n    }\n  }\n\n  render() {\n    const user = this.props.user;\n    let notifications = [];\n    let bell, notificationCounter;\n\n    if (!this.state.isRead) {\n      bell = React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faBell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n      notificationCounter = React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\",\n          color: \"#EF233C\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.notReadNotificationCount);\n    } else {\n      bell = React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faBell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }));\n      notificationCounter = React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.notReadNotificationCount);\n    }\n\n    if (this.state.notificationIds.length > 0) {\n      this.state.notifications.slice(0).reverse().map(notif => notifications.push(React.createElement(\"span\", {\n        key: notif.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.getNotification(notif))));\n    } else {\n      notifications.push(React.createElement(Dropdown.Item, {\n        key: 'no-notif-key',\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"No notifications.\"));\n    }\n\n    return React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-sm px-sm-5 nav-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Tum Market\",\n      className: \"navbar-brand img-responsive\",\n      style: {\n        width: \"55px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"navbar-nav align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item ml-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/newAdvertisement\",\n      className: \"text-new-ad text-decoration-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"New Advertisement\"))), React.createElement(\"div\", {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Form, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      onChange: this.props.search,\n      placeholder: \"Type in Product Title...\",\n      className: \"mr-sm-2 search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))), React.createElement(Filter, {\n      adverts: this.props.advertisements,\n      categories: this.props.categories,\n      subCategories: this.props.subCategories,\n      conditions: this.props.conditions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ml-auto d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, notificationCounter, React.createElement(Dropdown, {\n      onToggle: this.readNotifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"info\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, bell), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Dropdown.Menu, {\n      alignRight: true,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, notifications))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Dropdown, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, user !== undefined && user.info !== undefined ? user.info.name : \"\"), React.createElement(Dropdown.Menu, {\n      alignRight: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(Link, {\n      to: {\n        pathname: '/myAds'\n      },\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"My Advertisements\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"My Buying Requests\"), React.createElement(Link, {\n      to: {\n        pathname: '/tradeRequests'\n      },\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"My Trade Requests\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Chat Bot\"), React.createElement(Dropdown.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Dropdown.Item, {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Log Out\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\JFrancisco\\Documents\\tum-market\\src\\components\\Navbar.js"],"names":["React","Component","Link","firebase","Form","FormControl","Dropdown","history","Filter","FontAwesomeIcon","faBell","faTimes","Navbar","constructor","props","state","notifications","notificationIds","isRead","notReadNotificationCount","logout","bind","readNotifications","getNotification","deleteNotification","componentWillUnmount","notifRef","undefined","off","removeNotifRef","notifReadRef","componentWillReceiveProps","user","info","database","ref","child","id","on","snap","val","includes","notReadNotifCount","notification","idObj","notifObj","push","setState","auth","signOut","isShown","orderByChild","equalTo","forEach","update","notificationContainer","pathname","padding","message","background","cursor","margin","e","currentTarget","dataset","ids","notifId","notif","notifCount","remove","render","bell","notificationCounter","fontSize","color","length","slice","reverse","map","logo","width","search","advertisements","categories","subCategories","conditions","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../config/firebaseConfig';\r\nimport logo from '../assests/logo.svg'\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport history from '../history'\r\nimport Filter from './Filter'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notifications: [],\r\n            notificationIds: [],\r\n            isRead: true,\r\n            notReadNotificationCount: 0,\r\n        }\r\n\r\n        this.logout = this.logout.bind(this)\r\n        this.readNotifications = this.readNotifications.bind(this)\r\n        this.getNotification = this.getNotification.bind(this)\r\n        this.deleteNotification = this.deleteNotification.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.notifRef !== undefined) {\r\n            this.notifRef.off('value')\r\n            this.notifRef = null;\r\n        }\r\n\r\n        if (this.removeNotifRef !== undefined) {\r\n            this.removeNotifRef.off('value')\r\n            this.removeNotifRef = null;\r\n        }\r\n\r\n        if (this.notifReadRef !== undefined) {\r\n            this.notifReadRef.off('value')\r\n            this.notifReadRef = null;\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        if (this.props.user !== undefined && this.props.user.info !== undefined) {\r\n            this.notifRef = firebase.database().ref('notifications').child(this.props.user.info.id)\r\n            this.notifRef.on('child_added', snap => {\r\n                let id = snap.val().id;\r\n                if (!this.state.notificationIds.includes(id)) {\r\n                    let isRead = snap.val().isRead;\r\n                    let notReadNotifCount = this.state.notReadNotificationCount;\r\n                    if (!isRead) {\r\n                        notReadNotifCount++;\r\n                    }\r\n                    let notification = snap.val();\r\n                    let idObj = this.state.notificationIds;\r\n                    let notifObj = this.state.notifications;\r\n                    idObj.push(id);\r\n                    notifObj.push(notification)\r\n                    this.setState({\r\n                        notifications: notifObj,\r\n                        notificationIds: idObj,\r\n                        isRead: isRead,\r\n                        notReadNotificationCount: notReadNotifCount\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        firebase.auth().signOut();\r\n        history.push('/')\r\n    }\r\n\r\n    readNotifications(isShown) {\r\n        if (this.props.user !== undefined && this.props.user.info !== undefined && !this.state.isRead) {\r\n            this.notifReadRef = firebase.database().ref('notifications').child(this.props.user.info.id).orderByChild('isRead').equalTo(false)\r\n            this.notifReadRef.on('value', function (snap) {\r\n                snap.forEach(function (notification) {\r\n                    notification.ref.update({ isRead: true });\r\n                });\r\n            });\r\n\r\n            this.notifReadRef.off('value')\r\n            this.notifReadRef = null;\r\n\r\n            let notifications = this.state.notifications;\r\n            let isRead = this.state.isRead;\r\n\r\n            if (!isShown) {\r\n                notifications.forEach(function (notification) {\r\n                    if (!notification.isRead) {\r\n                        notification.isRead = true;\r\n                    }\r\n                })\r\n                isRead = true;\r\n            }\r\n\r\n            this.setState({\r\n                isRead: isRead,\r\n                notReadNotificationCount: 0,\r\n                notifications: notifications\r\n            })\r\n        }\r\n    }\r\n\r\n    getNotification(notification) {\r\n        let notificationContainer;\r\n\r\n        if (notification.isRead) {\r\n            notificationContainer =\r\n                <Link to={{ pathname: '/tradeRequests' }} className=\"dropdown-item\" style={{ padding: \"0.75rem\" }}>{notification.message}</Link>\r\n        }\r\n        else {\r\n            notificationContainer =\r\n                <Link to={{ pathname: '/tradeRequests' }} className=\"dropdown-item\" style={{ padding: \"0.75rem\", background: \"#C7DCF2\" }}>{notification.message}</Link>\r\n        }\r\n\r\n        return <span>\r\n            <div className=\"d-flex\" style={{ padding: \"0.5rem\" }}>\r\n                {notificationContainer}\r\n                <div className=\"m-auto pl-2 pr-2\">\r\n                    <span className=\"float-right offer-reject\" style={{ cursor: \"pointer\" }} onClick={this.deleteNotification} data-notification={notification.id}>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <hr style={{ margin: \"0rem 0rem\" }}></hr>\r\n        </span>\r\n    }\r\n\r\n    deleteNotification(e) {\r\n        if (this.props.user !== undefined && this.props.user.info !== undefined) {\r\n            let id = e.currentTarget.dataset.notification;\r\n            let ids = [];\r\n            let notifications = [];\r\n\r\n            this.state.notificationIds.forEach(function (notifId) {\r\n                if (notifId !== id) {\r\n                    ids.push(notifId)\r\n                }\r\n            })\r\n\r\n            this.state.notifications.forEach(function (notif) {\r\n                if (notif.id !== id) {\r\n                    notifications.push(notif)\r\n                }\r\n            })\r\n\r\n            let notifCount = this.state.notReadNotificationCount - 1;\r\n\r\n            if (notifCount < 0) {\r\n                notifCount = 0;\r\n            }\r\n\r\n            this.setState({\r\n                notificationIds: ids,\r\n                notifications: notifications,\r\n                notReadNotificationCount: notifCount\r\n            })\r\n\r\n            this.removeNotifRef = firebase.database().ref('notifications').child(this.props.user.info.id).child(id).remove();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        let notifications = [];\r\n        let bell, notificationCounter;\r\n\r\n        if (!this.state.isRead) {\r\n            bell = <span style={{ fontSize: \"18px\" }}><FontAwesomeIcon icon={faBell} /></span>\r\n            notificationCounter = <span style={{ fontSize: \"18px\", color: \"#EF233C\" }}>\r\n                {this.state.notReadNotificationCount}\r\n            </span>\r\n        }\r\n        else {\r\n            bell = <span style={{ fontSize: \"18px\" }}><FontAwesomeIcon icon={faBell} /></span>\r\n            notificationCounter = <span style={{ fontSize: \"18px\" }}>\r\n                {this.state.notReadNotificationCount}\r\n            </span>\r\n        }\r\n\r\n        if (this.state.notificationIds.length > 0) {\r\n            this.state.notifications.slice(0).reverse().map((notif) => notifications.push(<span key={notif.id}>{this.getNotification(notif)}</span>))\r\n        }\r\n        else {\r\n            notifications.push(<Dropdown.Item key={'no-notif-key'} disabled>No notifications.</Dropdown.Item>)\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm px-sm-5 nav-back\">\r\n                <Link to='/'>\r\n                    <img src={logo} alt=\"Tum Market\" className=\"navbar-brand img-responsive\" style={{ width: \"55px\" }} />\r\n                </Link>\r\n                <ul className=\"navbar-nav align-items-center\">\r\n                    <li className=\"nav-item ml-5\">\r\n                        <Link to=\"/newAdvertisement\" className=\"text-new-ad text-decoration-none\">New Advertisement</Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"ml-auto\">\r\n                    <Form inline>\r\n                        <Link to='/'>\r\n                            <FormControl onChange={this.props.search} placeholder=\"Type in Product Title...\" className=\"mr-sm-2 search\" />                 \r\n                        </Link>\r\n                    </Form>\r\n                </div>\r\n                <Filter adverts = {this.props.advertisements} categories={this.props.categories} subCategories={this.props.subCategories} conditions={this.props.conditions} />\r\n                <span className=\"ml-auto d-flex\">\r\n                    {notificationCounter}\r\n                    <Dropdown onToggle={this.readNotifications}>\r\n                        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\" >\r\n                            {bell}\r\n                        </Dropdown.Toggle>\r\n                        <div >\r\n\r\n                        </div>\r\n                        <Dropdown.Menu alignRight className=\"p-0\">\r\n                            {notifications}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </span>\r\n                <span></span>\r\n                <Dropdown className=\"ml-auto\">\r\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                        {user !== undefined && user.info !== undefined ? user.info.name : \"\"}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu alignRight>\r\n                        <Dropdown.Item href=\"#/action-1\">Profile</Dropdown.Item>\r\n                        <Link to={{ pathname: '/myAds' }} className=\"dropdown-item\">My Advertisements</Link>\r\n                        <Dropdown.Item href=\"#/action-3\">My Buying Requests</Dropdown.Item>\r\n                        <Link to={{ pathname: '/tradeRequests' }} className=\"dropdown-item\">My Trade Requests</Link>\r\n                        <Dropdown.Item href=\"#/action-3\">Chat Bot</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item onClick={this.logout}>Log Out</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </nav>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}