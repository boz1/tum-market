{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScreenClassContext = exports.NO_PROVIDER_FLAG = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require('../../utils');\n\nvar _config = require('../../config');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window */\n\n\nvar NO_PROVIDER_FLAG = exports.NO_PROVIDER_FLAG = 'NO_PROVIDER_FLAG';\n\nvar ScreenClassContext = exports.ScreenClassContext = _react2.default.createContext(NO_PROVIDER_FLAG);\n\nvar ScreenClassProvider = function (_PureComponent) {\n  _inherits(ScreenClassProvider, _PureComponent);\n\n  function ScreenClassProvider(props) {\n    _classCallCheck(this, ScreenClassProvider);\n\n    var _this = _possibleConstructorReturn(this, (ScreenClassProvider.__proto__ || Object.getPrototypeOf(ScreenClassProvider)).call(this, props));\n\n    _this.state = {\n      screenClass: (0, _config.getConfiguration)().defaultScreenClass\n    };\n    _this.screenClassRef = _react2.default.createRef();\n    _this.setScreenClass = _this.setScreenClass.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScreenClassProvider, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setScreenClass();\n      window.addEventListener('resize', this.setScreenClass, false);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.setScreenClass, false);\n    }\n  }, {\n    key: 'setScreenClass',\n    value: function setScreenClass() {\n      var useOwnWidth = this.props.useOwnWidth;\n      var source = useOwnWidth && this.screenClassRef && this.screenClassRef.current;\n      var currScreenClass = (0, _utils.getScreenClass)(source);\n\n      if (currScreenClass !== this.state.screenClass) {\n        this.setState({\n          screenClass: currScreenClass\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var screenClass = this.state.screenClass;\n      var _props = this.props,\n          children = _props.children,\n          useOwnWidth = _props.useOwnWidth;\n      return _react2.default.createElement(ScreenClassContext.Provider, {\n        value: screenClass\n      }, useOwnWidth ? _react2.default.createElement('div', {\n        ref: this.screenClassRef\n      }, children) : _react2.default.createElement(_react2.default.Fragment, null, children));\n    }\n  }]);\n\n  return ScreenClassProvider;\n}(_react.PureComponent);\n\nScreenClassProvider.propTypes = {\n  /**\n   * Children of the ScreenClassProvider.\n   * This should be all your child React nodes that are using `react-grid-system`.\n   */\n  children: _propTypes2.default.node.isRequired,\n\n  /**\n   * Boolean to determine whether own width should be used as source.\n   * When provided, the screen class is derived from own dimensions instead of the window.\n   */\n  useOwnWidth: _propTypes2.default.bool\n};\nScreenClassProvider.defaultProps = {\n  useOwnWidth: false\n};\nexports.default = ScreenClassProvider;","map":null,"metadata":{},"sourceType":"script"}