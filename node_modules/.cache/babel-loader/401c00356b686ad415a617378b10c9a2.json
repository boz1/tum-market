{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JFrancisco\\\\Documents\\\\tum-market\\\\src\\\\components\\\\advertisement\\\\PropertyDropdown.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nexport default class PropertyDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const item = parseInt(this.refs.ref.value);\n      this.props.handleChange(item, this.props.target);\n    };\n\n    this.state = {// item: \"\"\n    };\n  }\n\n  render() {\n    let options = [];\n    options.push(React.createElement(\"option\", {\n      key: \"empty\",\n      disabled: true,\n      value: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Choose...\"));\n    this.props.items.map(item => options.push(React.createElement(\"option\", {\n      key: item.id + item.title,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, item.title)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"text-sub-title\",\n      style: {\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.title), React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      defaultValue: '',\n      onChange: this.handleChange,\n      ref: \"ref\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, options)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\JFrancisco\\Documents\\tum-market\\src\\components\\advertisement\\PropertyDropdown.js"],"names":["React","Component","Form","PropertyDropdown","constructor","props","handleChange","event","item","parseInt","refs","ref","value","target","state","render","options","push","items","map","id","title","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACpDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOHC,KAAD,IAAW;AACtB,YAAMC,IAAI,GAAGC,QAAQ,CAAC,KAAKC,IAAL,CAAUC,GAAV,CAAcC,KAAf,CAArB;AACA,WAAKP,KAAL,CAAWC,YAAX,CAAwBE,IAAxB,EAA8B,KAAKH,KAAL,CAAWQ,MAAzC;AACH,KAVkB;;AAEf,SAAKC,KAAL,GAAa,CACT;AADS,KAAb;AAGH;;AAODC,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,EAAd;AAEAA,IAAAA,OAAO,CAACC,IAAR,CAAa;AAAQ,MAAA,GAAG,EAAC,OAAZ;AAAoB,MAAA,QAAQ,MAA5B;AAA6B,MAAA,KAAK,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAb;AACA,SAAKZ,KAAL,CAAWa,KAAX,CAAiBC,GAAjB,CAAsBX,IAAD,IAAUQ,OAAO,CAACC,IAAR,CAAa;AAAQ,MAAA,GAAG,EAAET,IAAI,CAACY,EAAL,GAAUZ,IAAI,CAACa,KAA5B;AAAmC,MAAA,KAAK,EAAEb,IAAI,CAACY,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDZ,IAAI,CAACa,KAAzD,CAAb,CAA/B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAuC,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,KAAKjB,KAAL,CAAWgB,KAAjF,CADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,EAAE,EAAC,QAA1B;AAAmC,MAAA,YAAY,EAAE,EAAjD;AAAqD,MAAA,QAAQ,EAAE,KAAKf,YAApE;AAAkF,MAAA,GAAG,EAAC,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,OADL,CAFJ,CADJ,CADJ;AAUH;;AA7BmD","sourcesContent":["import React, { Component } from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class PropertyDropdown extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // item: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const item = parseInt(this.refs.ref.value)\r\n        this.props.handleChange(item, this.props.target)\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n\r\n        options.push(<option key=\"empty\" disabled value={''}>Choose...</option>)\r\n        this.props.items.map((item) => options.push(<option key={item.id + item.title} value={item.id}>{item.title}</option>))\r\n\r\n        return (\r\n            <div>\r\n                <Form.Group>\r\n                    <Form.Label className=\"text-sub-title\" style={{ fontSize: \"16px\" }} >{this.props.title}</Form.Label>\r\n                    <Form.Control required as=\"select\" defaultValue={''} onChange={this.handleChange} ref=\"ref\">\r\n                        {options}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}