{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JFrancisco\\\\Documents\\\\tum-market\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport firebase from '../config/firebaseConfig';\nimport Alert from 'react-bootstrap/Alert';\nimport history from '../history';\nimport { Switch, Route } from 'react-router-dom';\nimport Verification from './Verification';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      showAlert: false,\n      signupBool: false,\n      name: '',\n      address: '',\n      mobile: '',\n      showVerify: false // error: {}\n\n    };\n    this.signup = this.signup.bind(this);\n    this.togglePage = this.togglePage.bind(this);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.validateForm = this.validateForm.bind(this);\n  }\n\n  componentDidMount() {\n    history.push('/');\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  login(e) {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(u => {\n      if (!u.user.emailVerified) {\n        this.setState({\n          showVerify: true,\n          showAlert: false,\n          password: ''\n        });\n      } else {\n        this.props.verify();\n      }\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        showAlert: true,\n        showVerify: false,\n        password: ''\n      });\n    });\n  }\n\n  togglePage() {\n    this.setState({\n      email: \"\",\n      password: \"\"\n    });\n    this.setState({\n      signupBool: !this.state.signupBool\n    });\n  }\n  /*validateForm() {\r\n      let errors = {};\r\n    let formIsValid = true;\r\n      if (!this.state.name) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"*Please enter your full name.\";\r\n    }\r\n      if (typeof this.state.name !== \"undefined\") {\r\n      if (!this.state.name.match(/^[a-zA-Z ]*$/)) {\r\n        formIsValid = false;\r\n        errors[\"name\"] = \"*Please enter alphabetic characters only.\";\r\n      }\r\n    }\r\n      if (!this.state.email) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"*Please enter your TUM email.\";\r\n    }\r\n      if (typeof this.state.email !== \"undefined\") {\r\n      //regular expression for email validation\r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))/i);\r\n      if (!pattern.test(this.state.email)) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter a valid TUM email.\";\r\n      }\r\n    }\r\n      if (!this.state.mobile) {\r\n      formIsValid = false;\r\n      errors[\"mobile\"] = \"*Please enter your mobile number.\";\r\n    }\r\n      if (typeof this.state.mobile !== \"undefined\") {\r\n      if (!this.state.mobile.match(/^[0-9]{10}$/)) {\r\n        formIsValid = false;\r\n        errors[\"mobile\"] = \"*Please enter valid number.\";\r\n      }\r\n    }\r\n      if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Please enter your password.\";\r\n    }\r\n      if (typeof this.state.password !== \"undefined\") {\r\n      if (!this.state.password.match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\r\n        formIsValid = false;\r\n        errors[\"password\"] = \"*Please enter a secure password with at least 8 characters.\";\r\n      }\r\n    }\r\n    if (!this.state.address) {\r\n      formIsValid = false;\r\n      errors[\"address\"] = \"*Please enter your address.\";\r\n    }\r\n    this.setState({\r\n      error: errors\r\n    });\r\n    console.log(errors)\r\n    return formIsValid;\r\n  }*/\n\n\n  signup(e) {\n    // if (this.validateForm()) {\n    e.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(this.state.email + '@mytum.de', this.state.password).then(u => {\n      const userId = u.user.uid;\n      const newUser = {\n        address: this.state.address,\n        telephone: this.state.mobile,\n        isPremium: false,\n        id: userId,\n        email: this.state.email + '@mytum.de',\n        name: this.state.name\n      };\n      var updates = {};\n      updates['/users/' + userId] = newUser;\n      firebase.database().ref().update(updates);\n      history.push('/verify');\n    }).catch(error => {\n      console.log(error);\n    }); // }\n  }\n\n  render() {\n    if (!this.state.signupBool) {\n      return React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mx-auto my-auto p-4 w-50 login-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"login-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Student Login\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: e => this.login(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        required: true,\n        value: this.state.email,\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Enter email address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        required: true,\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Alert, {\n        show: this.state.showAlert,\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Wrong password or email, please try again.\"), React.createElement(Alert, {\n        show: this.state.showVerify,\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Email not verified, please check your inbox.\"), React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        className: \"ml-auto mt-auto mb-auto large-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"New here? \", React.createElement(\"strong\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.togglePage,\n        className: \"text-premium bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Sign Up!\")))))));\n    } else {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/verify\",\n        component: Verification,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container mb-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mx-auto my-auto p-4 w-50 login-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"login-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Create New Account\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"form\", {\n        onSubmit: e => this.signup(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        name: \"email\",\n        pattern: \"[a-zA-Z0-9._%+-]{1,40}\",\n        title: \"Please enter only the first part of your TUM mail.\",\n        onChange: this.handleChange,\n        type: \"text\",\n        className: \"form-control w-100\",\n        placeholder: \"TUM Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group mx-sm-3 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"@mytum.du\")))), React.createElement(\"label\", {\n        className: \"text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"div\", {\n        className: \"form-group mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        name: \"password\",\n        onChange: this.handleChange,\n        type: \"password\",\n        className: \"form-control w-75\",\n        placeholder: \"Password\",\n        minLength: \"8\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"div\", {\n        className: \"form-group mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]{1,40}\",\n        title: \"Name can only have alphabetic characters. (max 40 char.)\",\n        maxLength: \"40\",\n        name: \"name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        className: \"form-control w-75\",\n        placeholder: \"Name + Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Mobile Number\"), React.createElement(\"div\", {\n        className: \"form-group mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        pattern: \"[0-9+\\\\s]{10,20}\",\n        title: \"Mobile number can only have +, space, and numeric characters. (min 10, max 20 char.)\",\n        required: true,\n        name: \"mobile\",\n        onChange: this.handleChange,\n        type: \"tel\",\n        className: \"form-control w-75\",\n        placeholder: \"Mobile\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"text-sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Address \", React.createElement(\"span\", {\n        style: {\n          color: \"#707070\",\n          fontSize: \"14px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"(max 100 characters)\")), React.createElement(\"div\", {\n        className: \"form-group mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        name: \"address\",\n        onChange: this.handleChange,\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Address\",\n        maxLength: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"d-flex mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Sign Up\")), React.createElement(\"div\", {\n        className: \"ml-auto mt-auto mb-auto large-login large-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Already have an account? \", React.createElement(\"strong\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.togglePage,\n        className: \"text-premium bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Login!\")))))))));\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\JFrancisco\\Documents\\tum-market\\src\\components\\Login.js"],"names":["React","Component","firebase","Alert","history","Switch","Route","Verification","Login","constructor","props","state","email","password","showAlert","signupBool","name","address","mobile","showVerify","signup","bind","togglePage","login","handleChange","componentDidMount","push","e","setState","target","value","preventDefault","auth","signInWithEmailAndPassword","then","u","user","emailVerified","verify","catch","error","console","log","createUserWithEmailAndPassword","userId","uid","newUser","telephone","isPremium","id","updates","database","ref","update","render","cursor","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from '../config/firebaseConfig';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport history from '../history'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Verification from './Verification'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      showAlert: false,\r\n      signupBool: false,\r\n      name: '',\r\n      address: '',\r\n      mobile: '',\r\n      showVerify: false\r\n      // error: {}\r\n    };\r\n\r\n    this.signup = this.signup.bind(this);\r\n    this.togglePage = this.togglePage.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    history.push('/')\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((u) => {\r\n        if (!u.user.emailVerified) {\r\n          this.setState({\r\n            showVerify: true,\r\n            showAlert: false,\r\n            password: ''\r\n          })\r\n        }\r\n        else {\r\n          this.props.verify()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        this.setState({\r\n          showAlert: true,\r\n          showVerify: false,\r\n          password: ''\r\n        })\r\n      });\r\n  }\r\n\r\n  togglePage() {\r\n    this.setState({ email: \"\", password: \"\" })\r\n    this.setState({ signupBool: !this.state.signupBool })\r\n  }\r\n\r\n  /*validateForm() {\r\n\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!this.state.name) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"*Please enter your full name.\";\r\n    }\r\n\r\n    if (typeof this.state.name !== \"undefined\") {\r\n      if (!this.state.name.match(/^[a-zA-Z ]*$/)) {\r\n        formIsValid = false;\r\n        errors[\"name\"] = \"*Please enter alphabetic characters only.\";\r\n      }\r\n    }\r\n\r\n    if (!this.state.email) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"*Please enter your TUM email.\";\r\n    }\r\n\r\n    if (typeof this.state.email !== \"undefined\") {\r\n      //regular expression for email validation\r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))/i);\r\n      if (!pattern.test(this.state.email)) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter a valid TUM email.\";\r\n      }\r\n    }\r\n\r\n    if (!this.state.mobile) {\r\n      formIsValid = false;\r\n      errors[\"mobile\"] = \"*Please enter your mobile number.\";\r\n    }\r\n\r\n    if (typeof this.state.mobile !== \"undefined\") {\r\n      if (!this.state.mobile.match(/^[0-9]{10}$/)) {\r\n        formIsValid = false;\r\n        errors[\"mobile\"] = \"*Please enter valid number.\";\r\n      }\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Please enter your password.\";\r\n    }\r\n\r\n    if (typeof this.state.password !== \"undefined\") {\r\n      if (!this.state.password.match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\r\n        formIsValid = false;\r\n        errors[\"password\"] = \"*Please enter a secure password with at least 8 characters.\";\r\n      }\r\n    }\r\n    if (!this.state.address) {\r\n      formIsValid = false;\r\n      errors[\"address\"] = \"*Please enter your address.\";\r\n    }\r\n    this.setState({\r\n      error: errors\r\n    });\r\n    console.log(errors)\r\n    return formIsValid;\r\n  }*/\r\n\r\n  signup(e) {\r\n    // if (this.validateForm()) {\r\n    e.preventDefault();\r\n    firebase.auth().createUserWithEmailAndPassword(this.state.email  + '@mytum.de', this.state.password)\r\n      .then((u) => {\r\n        const userId = u.user.uid;\r\n        const newUser = {\r\n          address: this.state.address,\r\n          telephone: this.state.mobile,\r\n          isPremium: false,\r\n          id: userId,\r\n          email: this.state.email + '@mytum.de',\r\n          name: this.state.name\r\n        };\r\n\r\n        var updates = {};\r\n        updates['/users/' + userId] = newUser;\r\n\r\n        firebase.database().ref().update(updates);\r\n        history.push('/verify')\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.signupBool) {\r\n      return (\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mx-auto my-auto p-4 w-50 login-border\">\r\n            <h3 className=\"login-header\">Student Login</h3>\r\n            <hr></hr>\r\n            <form onSubmit={e => this.login(e)}>\r\n              <div className=\"form-group text-sub-title\" >\r\n                <label >Email</label>\r\n                <input required value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter email address\" />\r\n              </div>\r\n              <div className=\"form-group text-sub-title\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input required value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n              </div>\r\n              <Alert show={this.state.showAlert} variant={\"danger\"} >\r\n                Wrong password or email, please try again.\r\n            </Alert>\r\n              <Alert show={this.state.showVerify} variant={\"warning\"} >\r\n                Email not verified, please check your inbox.\r\n            </Alert>\r\n              <div className=\"d-flex\">\r\n                <div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                </div>\r\n                <div className=\"ml-auto mt-auto mb-auto large-text\">\r\n                  <span>New here? <strong style={{ cursor: \"pointer\" }} onClick={this.togglePage} className=\"text-premium bold\">Sign Up!</strong></span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Switch>\r\n          <Route path=\"/verify\" component={Verification} />\r\n          <React.Fragment>\r\n            <div className=\"container mb-3 mt-3\">\r\n              <div className=\"mx-auto my-auto p-4 w-50 login-border\">\r\n                <h3 className=\"login-header\">Create New Account</h3>\r\n                <hr></hr>\r\n                <label className=\"text-sub-title\">Email</label>\r\n                <form onSubmit={e => this.signup(e)}>\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"form-group mb-2\">\r\n                      <input required name=\"email\" pattern=\"[a-zA-Z0-9._%+-]{1,40}\" title=\"Please enter only the first part of your TUM mail.\" onChange={this.handleChange} type=\"text\" className=\"form-control w-100\" placeholder=\"TUM Email\" />\r\n                    </div>\r\n                    <div className=\"form-group mx-sm-3 mb-2\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">@mytum.du</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div style={{ color: \"red\" }}>{this.state.error.email}</div> */}\r\n                  <label className=\"text-sub-title\">Password</label>\r\n                  <div className=\"form-group mb-2\">\r\n                    <input required name=\"password\" onChange={this.handleChange} type=\"password\" className=\"form-control w-75\" placeholder=\"Password\" minLength=\"8\" maxLength=\"20\" />\r\n                  </div>\r\n                  {/* <div style={{ color: \"red\" }}>{this.state.error.password}</div> */}\r\n                  <label className=\"text-sub-title\">Full Name</label>\r\n                  <div className=\"form-group mb-2\">\r\n                    <input required pattern=\"[a-zA-Z\\s]{1,40}\" title=\"Name can only have alphabetic characters. (max 40 char.)\" maxLength=\"40\" name=\"name\" onChange={this.handleChange} type=\"text\" className=\"form-control w-75\" placeholder=\"Name + Last Name\" />\r\n                  </div>\r\n                  {/* <div style={{ color: \"red\" }}>{this.state.error.name}</div> */}\r\n                  <label className=\"text-sub-title\">Mobile Number</label>\r\n                  <div className=\"form-group mb-2\">\r\n                    <input pattern=\"[0-9+\\s]{10,20}\" title=\"Mobile number can only have +, space, and numeric characters. (min 10, max 20 char.)\" required name=\"mobile\" onChange={this.handleChange} type=\"tel\" className=\"form-control w-75\" placeholder=\"Mobile\" maxLength=\"20\" />\r\n                  </div>\r\n                  {/* <div style={{ color: \"red\" }}>{this.state.error.mobile}</div> */}\r\n                  <label className=\"text-sub-title\">Address <span style={{ color: \"#707070\", fontSize: \"14px\" }}>(max 100 characters)</span></label>\r\n                  <div className=\"form-group mb-2\">\r\n                    <input required name=\"address\" onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Address\" maxLength=\"100\" />\r\n                  </div>\r\n                  {/* <div style={{ color: \"red\" }}>{this.state.error.address}</div> */}\r\n                  <div className=\"d-flex mt-3\">\r\n                    <div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Sign Up\r\n                    </button>\r\n                    </div>\r\n                    <div className=\"ml-auto mt-auto mb-auto large-login large-text\">\r\n                      <span>Already have an account? <strong style={{ cursor: \"pointer\" }} onClick={this.togglePage} className=\"text-premium bold\">Login!</strong></span>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        </Switch>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Login;        \r\n"]},"metadata":{},"sourceType":"module"}